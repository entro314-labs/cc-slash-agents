export const sampleAgentFiles = {
  'project-agent.md': `---
name: project-agent
description: A test project agent for unit testing purposes.
tools: Read, Write, Edit
model: sonnet
---

This is a test agent for project-level functionality.`,

  'user-agent.md': `---
name: user-agent
description: A test user agent that demonstrates global agent capabilities.
tools: [Read, Grep, Bash]
---

This is a test agent for user-level functionality.`,

  'code-reviewer.md': `---
name: code-reviewer
description: Review code for quality and best practices. Use PROACTIVELY for code analysis.
tools: Read, Grep, Edit
---

You are a senior code reviewer focusing on quality, security, and maintainability.`,

  'invalid-agent.md': `---
name: invalid-agent
description: 
---

This agent has invalid frontmatter.`,

  'no-frontmatter.md': `This file has no YAML frontmatter at all.

Just regular markdown content.`,

  'complex-agent.md': `---
name: complex-testing-agent
description: Complex agent with various features for comprehensive testing scenarios. Use PROACTIVELY when testing complex workflows.
tools: Read, Write, Edit, Bash, Grep, Glob
model: claude-3-sonnet
---

You are a comprehensive testing agent that handles:

## Core Capabilities
- Multi-step workflows
- Complex reasoning
- Error handling
- Edge case management

## Usage Examples
- Integration testing
- End-to-end validation  
- Complex scenario handling
- Multi-domain operations`,
}

export const sampleCommandFiles = {
  'manual-command.md': `---
description: A manually created command for testing
argument-hint: "test parameters"
---

This is a manually created command that should not be overwritten.

Arguments: $ARGUMENTS`,

  'generated-command.md': `<!-- ccsa:generated -->
<!-- Generated by cc-slash-agents v1.0.0 -->
<!-- Source: project-agent.md -->
<!-- Agent: project-agent -->
<!-- Scope: project -->
<!-- Generated: 2025-01-01T00:00:00.000Z -->

---
description: Project - a test project agent for unit testing purposes
argument-hint: "focus areas, file patterns, or specific requirements"
allowed-tools: [Read, Write, Edit]
model: sonnet
---

Use the project-agent agent to handle project-level functionality testing.

Arguments: $ARGUMENTS

---

*Generated by [cc-slash-agents](https://npmjs.com/package/cc-slash-agents). Run \`ccsa sync\` to update.*`,
}

export const sampleFileStructure = {
  // Project structure
  '/test-project/.claude/agents/project-agent.md': sampleAgentFiles['project-agent.md'],
  '/test-project/.claude/agents/subfolder/code-reviewer.md': sampleAgentFiles['code-reviewer.md'],
  '/test-project/.claude/commands/manual-command.md': sampleCommandFiles['manual-command.md'],
  '/test-project/.claude/commands/generated-command.md': sampleCommandFiles['generated-command.md'],

  // User structure
  '/Users/testuser/.claude/agents/user-agent.md': sampleAgentFiles['user-agent.md'],
  '/Users/testuser/.claude/agents/complex-agent.md': sampleAgentFiles['complex-agent.md'],
  '/Users/testuser/.claude/commands/user-command.md': sampleCommandFiles['manual-command.md'],

  // Invalid files for error testing
  '/test-project/.claude/agents/invalid-agent.md': sampleAgentFiles['invalid-agent.md'],
  '/test-project/.claude/agents/no-frontmatter.md': sampleAgentFiles['no-frontmatter.md'],
}
